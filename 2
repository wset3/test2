-- Check for AutoMenu functionality
if getgenv().AutoMenu then    
    -- Execute various server calls
    local args = {
        [1] = {
            [1] = {
                [1] = "\1"
            },
            [2] = "2"
        }
    }
    game:GetService("ReplicatedStorage").dataRemoteEvent:FireServer(unpack(args))
    wait(1.5)

    local args = {
        [1] = {
            [1] = "ui",
            [2] = "LeaderboardGui"
        }
    }
    game:GetService("ReplicatedStorage").Utility.AssetRequester.Remote:InvokeServer(unpack(args))

    local args = { [1] = "GetWeapons" }
    game:GetService("ReplicatedStorage").remotes.getData:InvokeServer(unpack(args))
    game:GetService("ReplicatedStorage").remotes.reloadInvy:InvokeServer()

    local args = { [1] = "Desert Temple" }
    game:GetService("ReplicatedStorage").remotes.getDungeonStats:InvokeServer(unpack(args))

    local args = {
        [1] = {
            [1] = {
                [1] = "\1",
                [2] = {
                    ["\3"] = "select",
                    ["characterIndex"] = 1
                }
            },
            [2] = "L"
        }
    }
    game:GetService("ReplicatedStorage").dataRemoteEvent:FireServer(unpack(args))   

    wait(0.9)

    print("Executing The Script...")
end

-- Check for AutoMakeDungeons functionality
if getgenv().AutoMakeDungeons then
    local dungeons = {
        {name = "Desert Temple", easy = 1, medium = 5, hard = 15},
        {name = "Winter Outpost", easy = 30, medium = 40, hard = 50},
        {name = "Pirate Island", insane = 60, nightmare = 65},
        {name = "King's Castle", insane = 70, nightmare = 75},
        {name = "The Underworld", insane = 80, nightmare = 85},
        {name = "Samurai Palace", insane = 90, nightmare = 95},
        {name = "The Canals", insane = 100, nightmare = 105},
        {name = "Ghastly Harbor", insane = 110, nightmare = 115},
        {name = "Steampunk Sewers", insane = 120, nightmare = 125},
        {name = "Orbital Outpost", insane = 135, nightmare = 140},
        {name = "Volcanic Chamber", insane = 150, nightmare = 155},
        {name = "Aquatic Temple", insane = 160, nightmare = 165},
        {name = "Enchanted Forest", insane = 170, nightmare = 175},
        {name = "Northern Lands", insane = 180, nightmare = 185},
        {name = "Gilded Skies", insane = 190, nightmare = 195},
        {name = "Yokai Peak", insane = 200, nightmare = 205},
        {name = "Abyssal Void", insane = 210, nightmare = 3000}
    }
    
    -- Get the player's level
    local player = game:GetService("Players").LocalPlayer
    local function getPlayerLevel()
        local head = player.Character:FindFirstChild("Head")
        if head then
            local playerNameplate = head:FindFirstChild("playerNameplate")
            if playerNameplate then
                local levelTextLabel = playerNameplate:FindFirstChild("Level")
                if levelTextLabel then
                    return tonumber(levelTextLabel.Text)
                end
            end
        end
        return 0
    end
    
    -- Function to create and start a dungeon
    local function createAndStartDungeon(dungeonName, difficulty)
        local args = {
            [1] = {
                [1] = {
                    [1] = "\1",
                    [2] = {
                        ["\3"] = "CreateParty",
                        ["partyData"] = {
                            ["dungeonName"] = dungeonName,
                            ["mode"] = "Normal",
                            ["difficulty"] = difficulty,
                            ["minimumJoinLevel"] = 0,
                            ["maxPlayers"] = 40,
                            ["visibility"] = "Public",
                            ["tier"] = 1,
                            ["partyName"] = "123"
                        }
                    }
                },
                [2] = "5"
            }
        }
        game:GetService("ReplicatedStorage").dataRemoteEvent:FireServer(unpack(args))
        wait(1) -- Ensure party is created
        game:GetService("ReplicatedStorage").dataRemoteEvent:FireServer({{[1] = "\1", [2] = {["\3"] = "StartParty"}}, [2] = "5"})
    end
    
    -- Check level and auto-create dungeon
    spawn(function()
        while getgenv().AutoMakeDungeons do
            local level = getPlayerLevel()
            for _, dungeon in ipairs(dungeons) do
                if level >= (dungeon.nightmare or 0) then
                    createAndStartDungeon(dungeon.name, "Nightmare")
                elseif level >= (dungeon.insane or 0) then
                    createAndStartDungeon(dungeon.name, "Insane")
                elseif level >= (dungeon.hard or 0) then
                    createAndStartDungeon(dungeon.name, "Hard")
                elseif level >= (dungeon.medium or 0) then
                    createAndStartDungeon(dungeon.name, "Medium")
                elseif level >= (dungeon.easy or 0) then
                    createAndStartDungeon(dungeon.name, "Easy")
                end
            end
            wait(5) -- Run every 5 seconds
        end
    end)
end

-- Independent SolaraVersion check for script loading
if getgenv().SolaraVersion then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/hen56s2/Holder/refs/heads/main/Pop"))()
else
    loadstring(game:HttpGet("https://raw.githubusercontent.com/hen56s2/221/refs/heads/main/Pop"))()
end
